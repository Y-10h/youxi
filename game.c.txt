#include "game.h"
void Initboard(char board[ROW][COL],int row, int col)//初始化棋盘
{
       int i=0;
       int j=0;
       for(i=0;i<row,i++)
       {
	for(j=0;j<col;j++)
	{
	       board[row][col]=' ';
	       break;	       
	} 
       }
}
void Dispalyboard(char board[ROW][COL],int row,int col)//打印棋盘
{
      int i=0;
      int j=0;
      for(i=0;i<row;i++)
      {
             printf(" %c ",boar[i][j]);
             if(j<col-1)
             printf("|");
      }
printf("\n");
//打印分割线
      if(i<row-1)
{
      for(j=0;j<col;j++)
      {
            printf("---");
            if(j<col-1)
            printf("|");
      }
printf("\n");
}
}
void palyerboard(char board[ROW][COL],int row,int col)//玩家下棋
{
       int x=0;
       int y=0;
       printf("玩家走：>")
       while(1)
       {
            printf("请输入要下的坐标\n");
            scanf("%d%d",&x,&y);
//判断是否合法
            if(x>=1  &&  x<row   &&   y>=1 && y<col)
              {
                     if(board[x-1][y-1]==' ')
                     {
                           board[x-1][y-1]='*';
	           break;           
                     }
	     else
                     {
 	          printf("该坐标被占用");
                     }
              }
             else
               {
	    printf("坐标违法，请重新输入！");
               }
       }
}
void computerboard(char board[ROW][COL],int row,int col)//NPC下棋
{
      int x=0;
      int y=0;
      printf("NPC走");
      while(1)
       {
              x=rend()%row;
              y=rend()%col;
              if(board[x][y]==' ')
              {
   	    board[x][y]='#';
	    break;
              }
       }    
}
//返回1表示棋盘满了
//返回0表示棋盘没满 
char IsFuli(char board[ROW][COL],int row,int col)
{
    int i=0;
    int j=0;
    for(i=0;i<row;i++)
    {
           for(j=0;j<col;j++)
           {
	if(board[i][j]==' ')
	{
	      return 0;//棋盘没满
	}
           }
    }
return 1;//棋盘满了
}
char IsWin(char board[ROW][COL],int row,int col)//判断输赢
{
         int i=0;
//横三行
         for(i=0;i<row;i++)
         {
      	if(board[i][0]==board[i][1]  &&  board[i][1]==board[i][2]  &&  board[i][1]!=' ')
	  {
	        printf("board[i][1]");
	  }
          }
//竖三列
         for(i=0;i<col,i++)
         {
  	if(board[0][1]==board[1][i]  &&  board[1][i]==board[2][i]  &&  board[1][i]!=' ')
	   {
	        printf("board[1][i]");
	   }
         }
//对角线 
	if(board[0][0]==board[1][1] && board[1][1]==board[2][2] && board[1][1]!=' ')
		return board[1][1];
	if(board[2][0]==board[1][1] && board[1][1]==board[0][2] && board[1][1]!=' ')
		return board[1][1];
//判断是否平局
if(1==IsFuli(board,ROW,COL))
{
         return 'Q';//平局
}
return 'C';//继续
}
